{
  "name": "expanded-tabs",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "usehooks-ts",
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { LucideIcon } from \"lucide-react\"\nimport { useOnClickOutside } from \"usehooks-ts\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface Tab {\n  title: string\n  icon: LucideIcon\n  type?: never\n}\n\ninterface Separator {\n  type: \"separator\"\n  title?: never\n  icon?: never\n}\n\ntype TabItem = Tab | Separator\n\ninterface ExpandedTabsProps {\n  tabs: TabItem[]\n  className?: string\n  activeColor?: string\n  onChange?: (index: number | null) => void\n}\n\nconst buttonVariants = {\n  initial: {\n    gap: 0,\n    paddingLeft: \".5rem\",\n    paddingRight: \".5rem\",\n  },\n  animate: (isSelected: boolean) => ({\n    gap: isSelected ? \".5rem\" : 0,\n    paddingLeft: isSelected ? \"1rem\" : \".5rem\",\n    paddingRight: isSelected ? \"1rem\" : \".5rem\",\n  }),\n}\n\nconst spanVariants = {\n  initial: { width: 0, opacity: 0 },\n  animate: { width: \"auto\", opacity: 1 },\n  exit: { width: 0, opacity: 0 },\n}\n\nconst transition = { delay: 0.1, type: \"spring\", bounce: 0, duration: 0.6 }\n\nexport function ExpandedTabs({\n  tabs,\n  className,\n  activeColor = \"text-primary\",\n  onChange,\n}: ExpandedTabsProps) {\n  const [selected, setSelected] = React.useState<number | null>(null)\n  const outsideClickRef = React.useRef<HTMLDivElement>(\n    null as unknown as HTMLDivElement\n  )\n\n  useOnClickOutside(outsideClickRef, () => {\n    setSelected(null)\n    onChange?.(null)\n  })\n\n  const handleSelect = (index: number) => {\n    setSelected(index)\n    onChange?.(index)\n  }\n\n  const Separator = () => (\n    <div className=\" h-[24px] w-[1.2px] bg-border\" aria-hidden=\"true\" />\n  )\n\n  return (\n    <div\n      ref={outsideClickRef}\n      className={cn(\n        \" flex gap-2 rounded-2xl border bg-background p-1 shadow-sm \",\n        className\n      )}\n    >\n      {tabs.map((tab, index) => {\n        if (tab.type === \"separator\") {\n          return <Separator key={`separator-${index}`} />\n        }\n\n        const Icon = tab.icon\n        return (\n          <motion.button\n            key={tab.title}\n            variants={buttonVariants}\n            initial={false}\n            animate=\"animate\"\n            custom={selected === index}\n            onClick={() => handleSelect(index)}\n            transition={transition}\n            className={cn(\n              \"relative flex items-center rounded-xl px-4 py-2 text-sm font-medium transition-colors duration-300\",\n              selected === index\n                ? cn(\"bg-muted\", activeColor)\n                : \"text-muted-foreground hover:bg-muted hover:text-foreground\"\n            )}\n          >\n            <Icon size={20} />\n            <AnimatePresence initial={false}>\n              {selected === index && (\n                <motion.span\n                  variants={spanVariants}\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  transition={transition}\n                  className=\"overflow-hidden\"\n                >\n                  {tab.title}\n                </motion.span>\n              )}\n            </AnimatePresence>\n          </motion.button>\n        )\n      })}\n    </div>\n  )\n}\n",
      "path": "ui/expanded-tabs.tsx",
      "target": "components/ui/expanded-tabs.tsx"
    }
  ]
}