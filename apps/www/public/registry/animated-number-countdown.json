{
  "name": "animated-number-countdown",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "@number-flow/react"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport React, { useEffect, useState } from \"react\"\nimport NumberFlow from \"@number-flow/react\"\nimport { motion } from \"framer-motion\"\n\nconst MotionNumberFlow = motion.create(NumberFlow)\n\ninterface CountdownProps {\n  endDate: Date\n  startDate?: Date\n  className?: string\n}\n\ninterface TimeLeft {\n  days: number\n  hours: number\n  minutes: number\n  seconds: number\n}\n\nexport default function AnimatedNumberCountdown({\n  endDate,\n  startDate,\n  className,\n}: CountdownProps) {\n  const [timeLeft, setTimeLeft] = useState<TimeLeft>({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  })\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const start = startDate ? new Date(startDate) : new Date()\n      const end = new Date(endDate)\n      const difference = end.getTime() - start.getTime()\n\n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24))\n        const hours = Math.floor((difference / (1000 * 60 * 60)) % 24)\n        const minutes = Math.floor((difference / 1000 / 60) % 60)\n        const seconds = Math.floor((difference / 1000) % 60)\n\n        setTimeLeft({ days, hours, minutes, seconds })\n      } else {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 })\n      }\n    }\n\n    calculateTimeLeft()\n    const timer = setInterval(calculateTimeLeft, 1000)\n\n    return () => clearInterval(timer)\n  }, [endDate, startDate])\n\n  return (\n    <div className={`flex items-center justify-center gap-4 ${className}`}>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.days}\n          className=\"text-5xl font-semibold tracking-tighter\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Days</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.hours}\n          className=\"text-5xl font-semibold tracking-tighter\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Hours</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.minutes}\n          className=\"text-5xl font-semibold tracking-tighter\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Minutes</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.seconds}\n          className=\"text-5xl font-semibold tracking-tighter\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Seconds</span>\n      </div>\n    </div>\n  )\n}\n",
      "path": "ui/animated-number-countdown.tsx",
      "target": "components/ui/animated-number-countdown.tsx"
    }
  ]
}