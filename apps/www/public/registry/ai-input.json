{
  "name": "ai-input",
  "type": "registry:ui",
  "registryDependencies": [
    "textarea"
  ],
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport Image from \"next/image\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { Globe, Paperclip, Plus, Send } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Textarea } from \"@/components/ui/textarea\"\n\ninterface UseAutoResizeTextareaProps {\n  minHeight: number\n  maxHeight?: number\n}\n\nfunction useAutoResizeTextarea({\n  minHeight,\n  maxHeight,\n}: UseAutoResizeTextareaProps) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n\n  const adjustHeight = useCallback(\n    (reset?: boolean) => {\n      const textarea = textareaRef.current\n      if (!textarea) return\n\n      if (reset) {\n        textarea.style.height = `${minHeight}px`\n        return\n      }\n\n      textarea.style.height = `${minHeight}px`\n      const newHeight = Math.max(\n        minHeight,\n        Math.min(textarea.scrollHeight, maxHeight ?? Number.POSITIVE_INFINITY)\n      )\n\n      textarea.style.height = `${newHeight}px`\n    },\n    [minHeight, maxHeight]\n  )\n\n  useEffect(() => {\n    const textarea = textareaRef.current\n    if (textarea) {\n      textarea.style.height = `${minHeight}px`\n    }\n  }, [minHeight])\n\n  useEffect(() => {\n    const handleResize = () => adjustHeight()\n    window.addEventListener(\"resize\", handleResize)\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [adjustHeight])\n\n  return { textareaRef, adjustHeight }\n}\n\nconst MIN_HEIGHT = 48\nconst MAX_HEIGHT = 164\n\nconst AnimatedPlaceholder = ({ showSearch }: { showSearch: boolean }) => (\n  <AnimatePresence mode=\"wait\">\n    <motion.p\n      key={showSearch ? \"search\" : \"ask\"}\n      initial={{ opacity: 0, y: 5 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -5 }}\n      transition={{ duration: 0.1 }}\n      className=\"pointer-events-none w-[150px] text-sm absolute text-black/70 dark:text-white/70\"\n    >\n      {showSearch ? \"Search the web...\" : \"Ask Skiper Ai...\"}\n    </motion.p>\n  </AnimatePresence>\n)\n\nexport default function AiInput() {\n  const [value, setValue] = useState(\"\")\n  const { textareaRef, adjustHeight } = useAutoResizeTextarea({\n    minHeight: MIN_HEIGHT,\n    maxHeight: MAX_HEIGHT,\n  })\n  const [showSearch, setShowSearch] = useState(true)\n  const [imagePreview, setImagePreview] = useState<string | null>(null)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handelClose = (e: any) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\" // Reset file input\n    }\n    setImagePreview(null) // Use null instead of empty string\n  }\n\n  const handelChange = (e: any) => {\n    const file = e.target.files ? e.target.files[0] : null\n    if (file) {\n      setImagePreview(URL.createObjectURL(file))\n    }\n  }\n\n  const handleSubmit = () => {\n    setValue(\"\")\n    adjustHeight(true)\n  }\n\n  useEffect(() => {\n    return () => {\n      if (imagePreview) {\n        URL.revokeObjectURL(imagePreview)\n      }\n    }\n  }, [imagePreview])\n  return (\n    <div className=\"w-full py-4\">\n      <div className=\"relative max-w-xl border rounded-[22px] border-black/5 p-1 w-full mx-auto\">\n        <div className=\"relative rounded-2xl border border-black/5 bg-neutral-800/5 flex flex-col\">\n          <div\n            className=\"overflow-y-auto\"\n            style={{ maxHeight: `${MAX_HEIGHT}px` }}\n          >\n            <div className=\"relative\">\n              <Textarea\n                id=\"ai-input-04\"\n                value={value}\n                placeholder=\"\"\n                className=\"w-full rounded-2xl rounded-b-none px-4 py-3 bg-black/5 dark:bg-white/5 border-none dark:text-white resize-none focus-visible:ring-0 leading-[1.2]\"\n                ref={textareaRef}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault()\n                    handleSubmit()\n                  }\n                }}\n                onChange={(e) => {\n                  setValue(e.target.value)\n                  adjustHeight()\n                }}\n              />\n              {!value && (\n                <div className=\"absolute left-4 top-3\">\n                  <AnimatedPlaceholder showSearch={showSearch} />\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"h-12 bg-black/5 dark:bg-white/5 rounded-b-xl\">\n            <div className=\"absolute left-3 bottom-3 flex items-center gap-2\">\n              <label\n                className={cn(\n                  \"cursor-pointer relative rounded-full p-2 bg-black/5 dark:bg-white/5\",\n                  imagePreview\n                    ? \"bg-[#ff3f17]/15 border border-[#ff3f17] text-[#ff3f17]\"\n                    : \"bg-black/5 dark:bg-white/5 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white\"\n                )}\n              >\n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handelChange}\n                  className=\"hidden\"\n                />\n                <Paperclip\n                  className={cn(\n                    \"w-4 h-4 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white transition-colors\",\n                    imagePreview && \"text-[#ff3f17]\"\n                  )}\n                />\n                {imagePreview && (\n                  <div className=\"absolute w-[100px] h-[100px] top-14 -left-4\">\n                    <Image\n                      className=\"object-cover rounded-2xl\"\n                      src={imagePreview || \"/picture1.jpeg\"}\n                      height={500}\n                      width={500}\n                      alt=\"additional image\"\n                    />\n                    <button\n                      onClick={handelClose}\n                      className=\"bg-[#e8e8e8] text-[#464646] absolute -top-1 -left-1 shadow-3xl rounded-full rotate-45\"\n                    >\n                      <Plus className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                )}\n              </label>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowSearch(!showSearch)\n                }}\n                className={cn(\n                  \"rounded-full transition-all flex items-center gap-2 px-1.5 py-1 border h-8\",\n                  showSearch\n                    ? \"bg-[#ff3f17]/15 border-[#ff3f17] text-[#ff3f17]\"\n                    : \"bg-black/5 dark:bg-white/5 border-transparent text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white\"\n                )}\n              >\n                <div className=\"w-4 h-4 flex items-center justify-center flex-shrink-0\">\n                  <motion.div\n                    animate={{\n                      rotate: showSearch ? 180 : 0,\n                      scale: showSearch ? 1.1 : 1,\n                    }}\n                    whileHover={{\n                      rotate: showSearch ? 180 : 15,\n                      scale: 1.1,\n                      transition: {\n                        type: \"spring\",\n                        stiffness: 300,\n                        damping: 10,\n                      },\n                    }}\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 260,\n                      damping: 25,\n                    }}\n                  >\n                    <Globe\n                      className={cn(\n                        \"w-4 h-4\",\n                        showSearch ? \"text-[#ff3f17]\" : \"text-inherit\"\n                      )}\n                    />\n                  </motion.div>\n                </div>\n                <AnimatePresence>\n                  {showSearch && (\n                    <motion.span\n                      initial={{ width: 0, opacity: 0 }}\n                      animate={{\n                        width: \"auto\",\n                        opacity: 1,\n                      }}\n                      exit={{ width: 0, opacity: 0 }}\n                      transition={{ duration: 0.2 }}\n                      className=\"text-sm overflow-hidden whitespace-nowrap text-[#ff3f17] flex-shrink-0\"\n                    >\n                      Search\n                    </motion.span>\n                  )}\n                </AnimatePresence>\n              </button>\n            </div>\n            <div className=\"absolute right-3 bottom-3\">\n              <button\n                type=\"button\"\n                onClick={handleSubmit}\n                className={cn(\n                  \"rounded-full p-2 transition-colors\",\n                  value\n                    ? \"bg-[#ff3f17]/15 text-[#ff3f17]\"\n                    : \"bg-black/5 dark:bg-white/5 text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white\"\n                )}\n              >\n                <Send className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "path": "ui/ai-input.tsx",
      "target": "components/ui/ai-input.tsx"
    }
  ]
}